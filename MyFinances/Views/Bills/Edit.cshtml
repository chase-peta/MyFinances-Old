@model Bill

@{
    ViewBag.Title = Model.Name + " Bill - Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="clear-after">
    <div class="pull-right">
        @Html.ActionLink("Back to all Bills", "Index", null, new { @class = "btn btn-primary" })
    </div>
    <h2>@ViewBag.Title</h2>
</div>

<hr />

<div class="row">

    <div class="col-xs-12 col-md-6">
        <div class="clear-after">
            <div class="pull-right">
                @Html.ActionLink("Add Payment", "AddPayment", new { id = Model.Id }, new { @class = "btn btn-primary margin-up" })
            </div>
            <h3>Edit Bill</h3>
        </div>

        <div class="update-form">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true)
                    @Html.HiddenFor(model => model.Id)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, new { @class = "control-label col-sm-4" })
                        <div class="col-sm-8">
                            @Html.EditorFor(model => model.Name)
                            @Html.ValidationMessageFor(model => model.Name)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DueDate, new { @class = "control-label col-sm-4" })
                        <div class="col-sm-8">
                            @Html.EditorFor(model => model.DueDate)
                            @Html.ValidationMessageFor(model => model.DueDate)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Amount, new { @class = "control-label col-sm-4" })
                        <div class="col-sm-8">
                            @Html.EditorFor(model => model.Amount)
                            @Html.ValidationMessageFor(model => model.Amount)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Payee, new { @class = "control-label col-sm-4" })
                        <div class="col-sm-8">
                            @Html.EditorFor(model => model.Payee)
                            @Html.ValidationMessageFor(model => model.Payee)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IssueDate, new { @class = "control-label col-sm-4" })
                        <div class="col-sm-8">
                            @Html.EditorFor(model => model.IssueDate)
                            @Html.ValidationMessageFor(model => model.IssueDate)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StaysSame, new { @class = "control-label col-sm-4" })
                        <div class="col-sm-8">
                            @Html.EditorFor(model => model.StaysSame)
                            @Html.ValidationMessageFor(model => model.StaysSame)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Shared, new { @class = "control-label col-sm-4" })
                        <div class="col-sm-8">
                            @Html.EditorFor(model => model.Shared)
                            @Html.ValidationMessageFor(model => model.Shared)
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-offset-4 col-sm-8">
                            <input type="submit" value="Save" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    <div class="col-xs-12 col-md-6">
        <div id="BillTabs">
            <ul class="nav nav-tabs" role="tablist">
                <li role="presentation" class="active"><a href="#billMonthlyAverages" aria-controls="billMonthlyAverages" role="tab" data-toggle="tab" class="btn-md">Monthly Averages</a></li>
                <li role="presentation"><a href="#billPaymentHistory" aria-controls="billPaymentHistory" role="tab" data-toggle="tab" class="btn-md">Payment History</a></li>
            </ul>

            <div class="tab-content">

                <div role="tabpanel" class="tab-pane fade in active" id="billMonthlyAverages">
                    @if (Model.BillHistoryAverage != null)
                    {
                        <div class="table-container">
                            <table class="table table-striped hidden-on-load" id="BillMonthlyAveragesTable">
                                <thead>
                                    <tr>
                                        <th class="hidden"></th>
                                        <th>@Html.DisplayNameFor(m => m.BillHistoryAverage.First().Month)</th>
                                        <th class="text-right">@Html.DisplayNameFor(m => m.BillHistoryAverage.First().Minimum)</th>
                                        <th class="text-right">@Html.DisplayNameFor(m => m.BillHistoryAverage.First().Maximum)</th>
                                        <th class="text-right">@Html.DisplayNameFor(m => m.BillHistoryAverage.First().Average)</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{int count = 0;}
                                    @foreach (BillHistoryAverage item in Model.BillHistoryAverage)
                                    {
                                        count += 1;
                                        <tr>
                                            <td data-order="@count" class="hidden"></td>
                                            <td data-order="@item.Month.Month">@Html.DisplayFor(m => item.Month)</td>
                                            <td class="text-right">@Html.DisplayFor(m => item.Minimum)</td>
                                            <td class="text-right">@Html.DisplayFor(m => item.Maximum)</td>
                                            <td class="text-right">@Html.DisplayFor(m => item.Average)</td>
                                        </tr>
                                    }
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <th class="hidden"></th>
                                        <th>@Html.DisplayNameFor(m => m.AveragePaid) - @Html.DisplayFor(m => m.AverageDay)</th>
                                        <th class="text-right">@Html.DisplayFor(m => m.MinPaid)</th>
                                        <th class="text-right">@Html.DisplayFor(m => m.MaxPaid)</th>
                                        <th class="text-right">@Html.DisplayFor(m => Model.AveragePaid)</th>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    }
                </div>

                <div role="tabpanel" class="tab-pane fade" id="billPaymentHistory">
                    @if (Model.BillHistory != null)
                    {
                        <div class="table-container border-bottom-ddd">
                            <table class="table table-striped hidden-on-load" id="BillPaymentHistoryTable">
                                <thead>
                                    <tr>
                                        <th>@Html.DisplayNameFor(m => m.BillHistory.First().DatePaid)</th>
                                        <th class="hidden-xs">@Html.DisplayNameFor(m => m.BillHistory.First().Payee)</th>
                                        <th class="hidden-xs">@Html.DisplayNameFor(m => m.BillHistory.First().IssueDate)</th>
                                        <th class="text-right">@Html.DisplayNameFor(m => m.BillHistory.First().Amount)</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.BillHistory)
                                    {
                                        <tr>
                                            <td data-search="@item.DatePaid.Year" data-order="@((item.DatePaid - new DateTime(2000, 1, 1)).Days)">
                                                @Html.ActionLink(item.DatePaid.ToString("MMMM - dd"), "EditPayment", new { id = item.Id })
                                            </td>
                                            <td class="hidden-xs">@Html.DisplayFor(m => item.Payee)</td>
                                            <td class="hidden-xs">@Html.DisplayFor(m => item.IssueDate)</td>
                                            <td class="text-right">@Html.DisplayFor(m => item.Amount)</td>
                                        </tr>
                                    }
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <th>Total:</th>
                                        <th class="hidden-xs"></th>
                                        <th class="hidden-xs"></th>
                                        <th class="total text-right"></th>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                        
                        <div class="text-center">
                            <ul class="pagination">
                                @for (int i = Model.MaxYear; i >= Model.MinYear; i--)
                                {
                                    <li><a href="#" data-year="@i">@i</a></li>
                                }
                            </ul>
                        </div>
                    }
                </div>

            </div>
        </div>
    </div>

</div>
